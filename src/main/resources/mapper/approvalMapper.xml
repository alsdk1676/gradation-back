<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.gradationback.mapper.ApprovalMapper">

<!-- 관리자용 승인 대기 목록 통합 조회 (각 도메인별로 사용) -->

    <!--    업사이클링 승인 관련   -->

    <!-- 업사이클링 신청 대기 먹록 조회 -->
    <select id="selectAllUpcyclingPending" resultType="UpcyclingDTO">
        SELECT
            TUP.ID, UPCYCLING_ADDRESS, UPCYCLING_DETAIL_ADDRESS, UPCYCLING_EMAIL, UPCYCLING_PHONE, UPCYCLING_DATE,
            UPCYCLING_SIZE_SMALL, UPCYCLING_SIZE_MEDIUM, UPCYCLING_SIZE_LARGE, UPCYCLING_MATERIALS, UPCYCLING_IMG_NAME,
            UPCYCLING_IMG_PATH, UPCYCLING_SIGNIFICANT, UPCYCLING_STATUS, UPCYCLING_REQUEST_DATE,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL
        FROM TBL_UPCYCLING TUP
            JOIN TBL_USER TUS ON TUP.USER_ID = TUS.ID
        WHERE TUP.UPCYCLING_STATUS = '미승인'
        ORDER BY TUP.UPCYCLING_DATE DESC
    </select>

    <select id="selectAllUpcyclingCompleted" resultType="UpcyclingDTO">
        SELECT
            TUP.ID, UPCYCLING_ADDRESS, UPCYCLING_DETAIL_ADDRESS, UPCYCLING_EMAIL, UPCYCLING_PHONE, UPCYCLING_DATE,
            UPCYCLING_SIZE_SMALL, UPCYCLING_SIZE_MEDIUM, UPCYCLING_SIZE_LARGE, UPCYCLING_MATERIALS, UPCYCLING_IMG_NAME,
            UPCYCLING_IMG_PATH, UPCYCLING_SIGNIFICANT, UPCYCLING_STATUS, UPCYCLING_REQUEST_DATE,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL
        FROM TBL_UPCYCLING TUP
                 JOIN TBL_USER TUS ON TUP.USER_ID = TUS.ID
        WHERE TUP.UPCYCLING_STATUS = '승인완료'
        ORDER BY TUP.UPCYCLING_DATE DESC
    </select>

    <!-- 업사이클링 신청 대기 목록 중 단일 내용 조회 -->
    <select id="selectUpcyclingPendingById" parameterType="Long" resultType="UpcyclingDTO">
        SELECT
            TUP.ID, UPCYCLING_ADDRESS, UPCYCLING_DETAIL_ADDRESS, UPCYCLING_EMAIL, UPCYCLING_PHONE, UPCYCLING_DATE,
            UPCYCLING_SIZE_SMALL, UPCYCLING_SIZE_MEDIUM, UPCYCLING_SIZE_LARGE, UPCYCLING_MATERIALS, UPCYCLING_IMG_NAME,
            UPCYCLING_IMG_PATH, UPCYCLING_SIGNIFICANT, UPCYCLING_STATUS, UPCYCLING_REQUEST_DATE,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL, USER_PHONE
        FROM TBL_UPCYCLING TUP
            JOIN TBL_USER TUS ON TUP.USER_ID = TUS.ID
        WHERE TUP.ID = #{id}
    </select>

    <select id="selectUpcyclingCompletedById" parameterType="Long" resultType="UpcyclingDTO">
        SELECT
            TUP.ID, UPCYCLING_ADDRESS, UPCYCLING_DETAIL_ADDRESS, UPCYCLING_EMAIL, UPCYCLING_PHONE, UPCYCLING_DATE,
            UPCYCLING_SIZE_SMALL, UPCYCLING_SIZE_MEDIUM, UPCYCLING_SIZE_LARGE, UPCYCLING_MATERIALS, UPCYCLING_IMG_NAME,
            UPCYCLING_IMG_PATH, UPCYCLING_SIGNIFICANT, UPCYCLING_STATUS, UPCYCLING_REQUEST_DATE,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL, USER_PHONE
        FROM TBL_UPCYCLING TUP
            JOIN TBL_USER TUS ON TUP.USER_ID = TUS.ID
        WHERE TUP.ID = #{id}
    </select>

    <!-- 업사이클링 신청 상태 변경 (승인/반려) -->
    <update id="updateUpcyclingStatus" parameterType="UpcyclingDTO">
        UPDATE TBL_UPCYCLING
        SET UPCYCLING_STATUS = #{upcyclingStatus},
            UPCYCLING_REJECT_REASON = #{upcyclingRejectReason}
        WHERE ID = #{id}
    </update>

    <!--    작품 승인 관련    -->

    <!-- 작품 승인 대기 목록 -->
    <select id="selectAllArtPending" resultType="ArtDTO">
        SELECT
            TAR.ID, ART_TITLE, ART_CATEGORY, ART_MATERIAL, ART_SIZE, ART_DESCRIPTION, ART_END_DATE, ART_STATUS,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL
        FROM TBL_ART TAR
            JOIN TBL_USER TUS ON TAR.USER_ID = TUS.ID
        WHERE TAR.ART_STATUS = '미승인'
        ORDER BY TAR.ID DESC
    </select>

    <select id="selectAllArtCompleted" resultType="ArtDTO">
        SELECT
            TAR.ID, ART_TITLE, ART_CATEGORY, ART_MATERIAL, ART_SIZE, ART_DESCRIPTION, ART_END_DATE, ART_STATUS,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL
        FROM TBL_ART TAR
                 JOIN TBL_USER TUS ON TAR.USER_ID = TUS.ID
        WHERE TAR.ART_STATUS = '승인완료'
        ORDER BY TAR.ID DESC
    </select>

    <!-- 작품 승인 대기 목록 중 단일 내용 조회 조회 -->
    <select id="selectArtPendingById" parameterType="Long" resultType="ArtDTO">
        SELECT
            TAR.ID, ART_TITLE, ART_CATEGORY, ART_MATERIAL, ART_SIZE, ART_DESCRIPTION, ART_END_DATE, ART_STATUS,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL, USER_PHONE,
            TAI.ART_IMG_NAME, ART_IMG_PATH
        FROM TBL_ART TAR
            JOIN TBL_USER TUS ON TAR.USER_ID = TUS.ID
            LEFT JOIN TBL_ART_IMG TAI ON TAR.ID = TAI.ART_ID
        WHERE TAR.ID = #{id}
    </select>

    <select id="selectArtCompletedById" parameterType="Long" resultType="ArtDTO">
        SELECT
            TAR.ID, ART_TITLE, ART_CATEGORY, ART_MATERIAL, ART_SIZE, ART_DESCRIPTION, ART_END_DATE, ART_STATUS,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL, USER_PHONE,
            TAI.ART_IMG_NAME, ART_IMG_PATH
        FROM TBL_ART TAR
            JOIN TBL_USER TUS ON TAR.USER_ID = TUS.ID
            LEFT JOIN TBL_ART_IMG TAI ON TAR.ID = TAI.ART_ID
        WHERE TAR.ID = #{id}
    </select>

    <!-- 작품 상태 변경 (승인/반려) -->
    <update id="updateArtStatus" parameterType="ArtDTO">
        UPDATE TBL_ART
        SET ART_STATUS = #{artStatus},
            ART_REJECT_REASON = #{artRejectReason}
        WHERE ID = #{id}
    </update>

    <!--    작가 승인 관련    -->

    <!-- 작가 승인 대기 목록 -->
    <select id="selectAllWriterPending" resultType="UserVO">
        SELECT ID, USER_NAME, USER_EMAIL, USER_WRITER_STATUS
        FROM TBL_USER
        WHERE USER_WRITER_STATUS = '미승인'
        ORDER BY ID DESC
    </select>

    <select id="selectAllWriterCompleted" resultType="UserVO">
        SELECT ID, USER_NAME, USER_EMAIL, USER_WRITER_STATUS
        FROM TBL_USER
        WHERE USER_WRITER_STATUS = '승인완료'
        ORDER BY ID DESC
    </select>

    <!-- 작가 승인 대기 중 단일 내용 조회 -->
    <select id="selectWriterPendingById" parameterType="Long" resultType="UserVO">
        SELECT ID, USER_NAME, USER_EMAIL, USER_PHONE, USER_WRITER_STATUS
        FROM TBL_USER
        WHERE ID = #{id}
    </select>

    <select id="selectWriterCompletedById" parameterType="Long" resultType="UserVO">
        SELECT ID, USER_NAME, USER_EMAIL, USER_PHONE, USER_WRITER_STATUS
        FROM TBL_USER
        WHERE ID = #{id}
    </select>

    <!-- 작가 인증 상태 변경 (승인/반려) -->
    <update id="updateWriterStatus" parameterType="UserVO">
        UPDATE TBL_USER
        SET USER_WRITER_STATUS = #{userWriterStatus}
        WHERE ID = #{id}
    </update>

    <!--    학교 인증 관련    -->

    <!-- 대학 인증 승인 대기 목록 -->
    <select id="selectAllUniversityPending" resultType="UserVO">
        SELECT ID, USER_NAME, USER_EMAIL, USER_UNIVERSITY_STATUS, USER_UNIVERSITY_REQUEST_DATE
        FROM TBL_USER
        WHERE USER_UNIVERSITY_STATUS = '미승인'
        ORDER BY ID DESC
    </select>

    <select id="selectAllUniversityCompleted" resultType="UserVO">
        SELECT ID, USER_NAME, USER_EMAIL, USER_UNIVERSITY_STATUS, USER_UNIVERSITY_REQUEST_DATE
        FROM TBL_USER
        WHERE USER_UNIVERSITY_STATUS = '승인완료'
        ORDER BY ID DESC
    </select>

    <!-- 대학 인증 승인 대기 중 단일 내용 조회 조회 -->
    <select id="selectUniversityPendingById" parameterType="Long" resultType="UserVO">
        SELECT
            TUS.ID, USER_NAME, USER_EMAIL, USER_PHONE, USER_UNIVERSITY_STATUS, USER_UNIVERSITY_REQUEST_DATE, USER_MAJOR_IMG_NAME, USER_MAJOR_IMG_PATH,
            UNIVERSITY_NAME,
            MAJOR_NAME
        FROM TBL_USER TUS
        LEFT JOIN TBL_MAJOR TMA ON TUS.MAJOR_ID = TMA.ID
        LEFT JOIN TBL_UNIVERSITY TUN ON TMA.UNIVERSITY_ID = TUN.ID
        WHERE TUS.ID = #{id}
    </select>

    <select id="selectUniversityCompletedById" parameterType="Long" resultType="UserVO">
        SELECT
            TUS.ID, USER_NAME, USER_EMAIL, USER_PHONE, USER_UNIVERSITY_STATUS, USER_UNIVERSITY_REQUEST_DATE, USER_MAJOR_IMG_NAME, USER_MAJOR_IMG_PATH,
            UNIVERSITY_NAME,
            MAJOR_NAME
        FROM TBL_USER TUS
                 LEFT JOIN TBL_MAJOR TMA ON TUS.MAJOR_ID = TMA.ID
                 LEFT JOIN TBL_UNIVERSITY TUN ON TMA.UNIVERSITY_ID = TUN.ID
        WHERE TUS.ID = #{id}
    </select>

    <!-- 대학 인증 상태 변경 (승인/반려) -->
    <update id="updateUniversityStatus" parameterType="UserVO">
        UPDATE TBL_USER
        SET USER_UNIVERSITY_STATUS = #{userUniversityStatus},
            USER_UNIVERSITY_REJECT_REASON = #{userUniversityRejectReason}
        WHERE ID = #{id}
    </update>

    <!--    대학 전시회 인증 관련    -->

    <!-- 대학 전시회 인증 승인 대기 목록 -->
    <select id="selectAllUniversityExhibitionPending" resultType="UniversityExhibitionDTO">
        SELECT TUE.ID, UNIVERSITY_EXHIBITION_START_DATE, UNIVERSITY_EXHIBITION_END_DATE, UNIVERSITY_EXHIBITION_TITLE, UNIVERSITY_EXHIBITION_LOCATION, UNIVERSITY_EXHIBITION_STATUS, UNIVERSITY_EXHIBITION_REJECT_REASON, UNIVERSITY_EXHIBITION_REQUEST_DATE,
               TUN.UNIVERSITY_NAME AS UNIVERSITY_NAME
        FROM TBL_UNIVERSITY_EXHIBITION TUE
            JOIN TBL_MAJOR TMA ON TUE.MAJOR_ID = TMA.ID
            JOIN TBL_UNIVERSITY TUN ON TMA.UNIVERSITY_ID = TUN.ID
        WHERE TUE.UNIVERSITY_EXHIBITION_STATUS = '미승인'
        ORDER BY TUE.UNIVERSITY_EXHIBITION_START_DATE DESC
    </select>

    <select id="selectAllUniversityExhibitionCompleted" resultType="UniversityExhibitionDTO">
        SELECT TUE.ID, UNIVERSITY_EXHIBITION_START_DATE, UNIVERSITY_EXHIBITION_END_DATE, UNIVERSITY_EXHIBITION_TITLE, UNIVERSITY_EXHIBITION_LOCATION, UNIVERSITY_EXHIBITION_STATUS, UNIVERSITY_EXHIBITION_REJECT_REASON, UNIVERSITY_EXHIBITION_REQUEST_DATE,
               TUN.UNIVERSITY_NAME AS UNIVERSITY_NAME
        FROM TBL_UNIVERSITY_EXHIBITION TUE
            JOIN TBL_MAJOR TMA ON TUE.MAJOR_ID = TMA.ID
            JOIN TBL_UNIVERSITY TUN ON TMA.UNIVERSITY_ID = TUN.ID
        WHERE TUE.UNIVERSITY_EXHIBITION_STATUS = '승인완료'
        ORDER BY TUE.UNIVERSITY_EXHIBITION_START_DATE DESC
    </select>

    <!-- 대학 전시회 인증 승인 대기 중 단일 내용 조회 조회 -->
    <select id="selectUniversityExhibitionPendingById" parameterType="Long" resultType="UniversityExhibitionDTO">
        SELECT
            TUE.UNIVERSITY_EXHIBITION_START_DATE, UNIVERSITY_EXHIBITION_END_DATE, UNIVERSITY_EXHIBITION_TITLE, UNIVERSITY_EXHIBITION_LOCATION, UNIVERSITY_EXHIBITION_STATUS, UNIVERSITY_EXHIBITION_REJECT_REASON, UNIVERSITY_EXHIBITION_REQUEST_DATE,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL, USER_PHONE,
            (SELECT UNIVERSITY_EXHIBITION_IMG_NAME
             FROM TBL_UNIVERSITY_EXHIBITION_IMG
             WHERE UNIVERSITY_EXHIBITION_ID = TUE.ID AND ROWNUM = 1) AS UNIVERSITY_EXHIBITION_IMG_NAME,
            (SELECT UNIVERSITY_EXHIBITION_IMG_PATH
             FROM TBL_UNIVERSITY_EXHIBITION_IMG
             WHERE UNIVERSITY_EXHIBITION_ID = TUE.ID AND ROWNUM = 1) AS UNIVERSITY_EXHIBITION_IMG_PATH,
            TUN.UNIVERSITY_NAME, UNIVERSITY_HOMEPAGE,
            TMA.MAJOR_NAME
        FROM TBL_UNIVERSITY_EXHIBITION TUE
                 JOIN TBL_USER TUS ON TUE.USER_ID = TUS.ID
                 LEFT JOIN TBL_MAJOR TMA ON TUS.MAJOR_ID = TMA.ID
                 LEFT JOIN TBL_UNIVERSITY TUN ON TMA.UNIVERSITY_ID = TUN.ID
        WHERE TUE.ID = #{id}
    </select>


    <select id="selectUniversityExhibitionCompletedById" parameterType="Long" resultType="UniversityExhibitionDTO">
        SELECT
            TUE.UNIVERSITY_EXHIBITION_START_DATE, UNIVERSITY_EXHIBITION_END_DATE, UNIVERSITY_EXHIBITION_TITLE, UNIVERSITY_EXHIBITION_LOCATION, UNIVERSITY_EXHIBITION_STATUS, UNIVERSITY_EXHIBITION_REJECT_REASON, UNIVERSITY_EXHIBITION_REQUEST_DATE,
            TUS.ID AS USER_ID, USER_NAME, USER_EMAIL, USER_PHONE,
            (SELECT UNIVERSITY_EXHIBITION_IMG_NAME
             FROM TBL_UNIVERSITY_EXHIBITION_IMG
             WHERE UNIVERSITY_EXHIBITION_ID = TUE.ID AND ROWNUM = 1) AS UNIVERSITY_EXHIBITION_IMG_NAME,
            (SELECT UNIVERSITY_EXHIBITION_IMG_PATH
             FROM TBL_UNIVERSITY_EXHIBITION_IMG
             WHERE UNIVERSITY_EXHIBITION_ID = TUE.ID AND ROWNUM = 1) AS UNIVERSITY_EXHIBITION_IMG_PATH,
            TUN.UNIVERSITY_NAME, UNIVERSITY_HOMEPAGE,
            TMA.MAJOR_NAME
        FROM TBL_UNIVERSITY_EXHIBITION TUE
                 JOIN TBL_USER TUS ON TUE.USER_ID = TUS.ID
                 LEFT JOIN TBL_MAJOR TMA ON TUS.MAJOR_ID = TMA.ID
                 LEFT JOIN TBL_UNIVERSITY TUN ON TMA.UNIVERSITY_ID = TUN.ID
        WHERE TUE.ID = #{id}
    </select>

    <!-- 대학 전시회 인증 상태 변경 (승인/반려) -->
    <update id="updateUniversityExhibitionStatus" parameterType="UniversityExhibitionDTO">
        UPDATE TBL_UNIVERSITY_EXHIBITION
        SET UNIVERSITY_EXHIBITION_STATUS = #{universityExhibitionStatus},
            UNIVERSITY_EXHIBITION_REJECT_REASON = #{universityExhibitionRejectReason}
        WHERE ID = #{id}
    </update>

</mapper>